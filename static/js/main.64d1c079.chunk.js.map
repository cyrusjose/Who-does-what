{"version":3,"sources":["utils/API.js","utils/DataContext.js","components/SearchBar/Search.js","components/Nav/Nav.js","components/TableBody/Body.js","components/Table/Table.js","components/DataArea/Data.js","components/Main/Main.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["axios","get","process","DataContext","React","createContext","Seach","context","useContext","className","type","placeholder","aria-label","onChange","e","handleSearch","Nav","Body","undefined","devState","userFilter","name","map","login","picture","phone","email","dob","key","uuid","data-th","src","large","alt","first","last","href","target","date","dateArray","split","join","dateFormatting","Table","id","headings","width","style","onClick","handleSorting","toLowerCase","DataArea","useState","users","order","setDevState","useEffect","API","then","results","data","Provider","value","event","filterValue","filteredList","filter","item","indexOf","heading","userSort","sort","a","b","localeCompare","length","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64d1c079.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getUsers: function () {\n    return axios.get(process.env.REACT_APP_RANDOM_USER_URL);\n  }\n};\n","import React from \"react\";\n\nconst DataContext = React.createContext({});\n\nexport default DataContext;\n","import React, { useContext } from \"react\";\nimport \"./Search.css\";\nimport DataContext from \"../../utils/DataContext\";\n\nexport default function Seach() {\n  const context = useContext(DataContext);\n  return (\n    <div className=\"searchbox\">\n      <form className=\"searchForm\">\n        <input\n          className=\"form-control px-5\"\n          type=\"search\"\n          placeholder=\"Search First Name\"\n          aria-label=\"Search\"\n          onChange={e => context.handleSearch(e)}\n        />\n        <button className=\"search px-3\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Search from \"../SearchBar/Search\";\nimport \"./Nav.css\";\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg\">\n      <div className=\"search-area col-4\">\n        <Search />\n      </div>\n    </nav>\n  );\n}\n","import React, { useContext } from \"react\";\nimport \"./Body.css\";\nimport DataContext from \"../../utils/DataContext\";\n\nexport default function Body() {\n  const context = useContext(DataContext);\n\n  const dateFormatting = date => {\n    const dateArray = date.split(\"-\");\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day].join(\"-\");\n    return formattedDate;\n  };\n  return (\n    <tbody>\n      {/* Ternary: Condition if the users are able to be filtered then return all info, otherwise return empty */}\n      {context.devState.userFilter[0] !== undefined &&\n      context.devState.userFilter[0].name !== undefined ? (\n        context.devState.userFilter.map(\n          ({ login, picture, name, phone, email, dob }) => {\n            return (\n              <tr key={login.uuid} className = \"rowHover\">\n                <td data-th=\"Image\" className=\"employee\">\n                  <img\n                    src={picture.large}\n                    alt={\"profile image for \" + name.first + \" \" + name.last}\n                    className=\"img-responsive empImage\"\n                  />\n                </td>\n                <td data-th=\"Name\" className=\"info pt-5 name-cell\">\n                  {name.first} {name.last}\n                </td>\n                <td data-th=\"Phone\" className=\"info pt-5\">\n                  {phone}\n                </td>\n                <td data-th=\"Email\" className=\"info pt-5\">\n                  <a href={\"mailto:\" + email} target=\"__blank\">\n                    {email}\n                  </a>\n                </td>\n                <td data-th=\"DOB\" className=\"info pt-5\">\n                  {dateFormatting(dob.date)}\n                </td>\n              </tr>\n            );\n          }\n        )\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n}\n","import React, { useContext } from \"react\";\nimport \"./Table.css\";\nimport DataContext from \"../../utils/DataContext\";\nimport Body from \"../TableBody/Body\";\n\nexport default function Table() {\n  const context = useContext(DataContext);\n\n  return (\n    <div className=\"datatable mt-5\">\n      <table\n        id=\"table\"\n        className=\"table table-condensed\"\n      >\n        {/* Table Header */}\n        <thead>\n          <tr className=\"info text-center\">\n            {context.devState.headings.map(({ name, width }) => {\n              return (\n                <th\n                  className=\"col\"\n                  key={name}\n                  style={{ width }}\n                  onClick={() => {\n                    context.handleSorting(name.toLowerCase());\n                  }}\n                >\n                  {name}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        {/* Table Body */}\n        <Body />\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport \"./Data.css\";\nimport DataContext from \"../../utils/DataContext\";\nimport Nav from \"../Nav/Nav\";\nimport Table from \"../Table/Table\";\n\nconst DataArea = () => {\n  const [devState, setDevState] = useState({\n    users: [],\n    order: \"ascend\",\n    userFilter: [],\n    headings: [\n      { name: \"Profile Pic\", width: \"10%\" },\n      { name: \"Name\", width: \"10%\" },\n      { name: \"Phone\", width: \"20%\" },\n      { name: \"Email\", width: \"20%\" },\n      { name: \"DOB\", width: \"10%\" }\n    ]\n  });\n\n  const handleSorting = heading => {\n    if (devState.order === \"descend\") {\n      setDevState(\"ascend\");\n    } else {\n      setDevState(\"descend\");\n    }\n\n    const comparison = (a, b) => {\n      if (devState.order === \"ascend\") {\n        if (a[heading] === undefined) {\n          // Place heading last\n          return 1;\n        } else if (b[heading] === undefined) {\n          // place heading last\n          return -1;\n        } else if (heading === \"name\") {\n          // If the heading has a name then make sort in alphabetic\n          return a[heading].first.localeCompare(b[heading].first);\n        } else {\n          // Compare the headings values in descending order.\n          return b[heading] - a[heading];\n        }\n      } else {\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        } else {\n          return b[heading] - a[heading];\n        }\n      }\n    };\n\n    const userSort = devState.userFilter.sort(comparison);\n\n    setDevState({\n      ...devState,\n      userFilter: userSort\n    });\n  };\n\n  const handleSearch = event => {\n    // Take the item passed into the function\n    const filterValue = event.target.value;\n    const filteredList = devState.users.filter(item => {\n      let values = item.name.first.toLowerCase();\n      return values.indexOf(filterValue.toLowerCase()) !== -1;\n    });\n\n    setDevState({\n      ...devState,\n      userFilter: filteredList\n    });\n  };\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      setDevState({\n        ...devState,\n        users: results.data.results,\n        userFilter: results.data.results\n      });\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <DataContext.Provider value={{ devState, handleSearch, handleSorting }}>\n      <Nav />\n      <div className=\"data-area\">\n        {devState.userFilter.length > 0 ? <Table /> : <div></div>}\n      </div>\n    </DataContext.Provider>\n  );\n};\n\nexport default DataArea;\n","import React from \"react\";\nimport DataArea from \"../DataArea/Data\";\n\nexport default function Main() {\n  return (\n    <>\n      <DataArea />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Wrapper({ children }) {\n  return <div>{children}</div>;\n}\n","import React from \"react\";\nimport \"./Header.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <h1> Employee Directory</h1>\n      <h6>\n        Click on name column header to organize the name column alphabetically\n      </h6>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Main from \"./components/Main/Main\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Header from \"./components/Header/Header\";\n\nfunction App() {\n  return (\n    <div>\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}